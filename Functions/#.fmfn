/**
 * =====================================================
 * # ( name ; value )
 *
 * PURPOSE:
 *		Creates a string designed to be passed into a Let () function.
 *		Most commonly used with #Assign or #AssignScriptParameters
 *		You can create a string for multiple named parameters by
 *		concatenating multiple calls of this function.
 * 
 * RETURNS:
 *		(string) Formatted variable declaration
 *		such as $variable = "input" or $$variable = "input"
 *		see note about $$
 *
 * EXAMPLES:
 *		#Assign ( # ( "variableName"; "value" ) )
 *		#Assign ( # ( "$variableName"; "value" ) )
 *		#Assign ( # ( "$$variableName"; "value" ) )
 *		#Assign ( # ( "var1"; "value1" ) & # ( "var2"; "value2" ) )
 *
 * DEPENDENCIES:
 *		none
 *
 * NOTES:
 *		This is a wrapper function per
 *		http://filemakerstandards.org/pages/viewpage.action?pageId=557462
 *		$$GLOBAL.VARIABLES must explicitly use a preceeding "$$" for the
 *		name parameter, otherwise the use of a preceeding "$" is optional
 *		for code clarity.
 *
 * HISTORY:
 * 		MODIFIED on 2012-06-06 by matt@filemakermagazine.com to support $$
 * 		RELEASED 2010-11-23
 * =====================================================
 * 
 */

If ( Left ( name ; 2 ) = "$$" ;
	name; // Explicit global variable declaration
	"$" & Substitute ( name ; "$" ; "" ) // Otherwise assume local and clean input
) & " = " & Quote ( value ) & ";Â¶"